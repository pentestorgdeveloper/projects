$(window).load(function() {
  var map,
      marker,
      lat = -34.397,
      lng = 150.644,
      position = {lat: lat, lng: lng},
      icon = 'assets/img/template/map_marker.png',
      zoomControl = true,
      mapName = 'Name',
      mapAddress = 'Mechelaarstraat 17 4903 RE Oosterhout',
      contentString = '<div class="map-info" id="map-hook">' +
                        '<h6>' + mapName + '</h6>' +
                        '<p>' + mapAddress + '</p>' +
                        '<button class="btn btn-default btn-block btn-sm">' +
                          '<span class="icon-btn fa fa-map-o"></span>' +
                          'Open in Google Maps' +
                        '</button>' +
                      '</div>';
  function initMap() {
    map = new google.maps.Map(document.getElementById('google-map'), {
      center: position,
      zoom: 8,
      zoomControl: zoomControl,
      gestureHandling: 'cooperative'
    });
    marker = new google.maps.Marker({
      position: position,
      map: map,
      icon: icon
    });
    var infowindow = new google.maps.InfoWindow({
      content: contentString,
      maxWidth: '200',
      position: {lat: -34.390, lng: 150.644}
    });
    marker.addListener('click', function() {
      infowindow.open(map, marker);
    });

    google.maps.event.addListener(infowindow, 'domready', function() {
      var hook = $('#map-hook');
      hook.parent().parent().parent().parent().css({'width': '200px', 'border': '1px solid #f4f7f9', 'border-radius': '4px', 'box-shadow': '0 0 4px 0 rgba(0,0,0,0.2)', 'background': 'white', 'transform': 'translate(25px,10px)'});
      hook.parent().parent().parent().parent().children('div:nth-child(1)').children('div:nth-child(1)').css({'border': 'none'});
      hook.parent().parent().parent().parent().children('div:nth-child(1)').children('div:nth-child(2)').css({'width': '200px', 'background': 'none', 'box-shadow': 'none'});
      hook.parent().parent().parent().parent().children('div:nth-child(1)').children('div:last-child').css({'width': '200px', 'background': 'none', 'border-radius': 'none'});
      hook.parent().parent().parent().parent().children('div:nth-child(1)').children('div:nth-child(3)').css({'left': '86px'});
      hook.parent().parent().parent().parent().children('div:nth-child(1)').children('div:nth-child(3)').html('<div style="width: 0; height: 0; border-style: solid; border-width: 13px 15px 0 15px; border-color: white transparent transparent transparent;"></div>');
      hook.parent().parent().parent().parent().children('div:last-child').css({'width': '20px', 'height': '20px', 'border-radius': '50%', 'background': '#628094', 'top': '-10px', 'right': '-10px', 'text-align': 'center', 'opacity': '1'});
      hook.parent().parent().parent().parent().children('div:last-child').html('<span class="fa fa-times" style="color: white; font-size: 15px; line-height: 20px"></span>');
      hook.parent().parent().parent().css({'left': '0'});
    });
  }
  initMap();

});

$(function(){

  var elementDnD = $('.element-dnd'),
      elementClass = '.element-dnd',
      elementDnDInside = elementDnD.find('[contenteditable="true"]'),
      elementDnDDelete = $('.el-delete'),
      deleteDnD = $('.el-delete'),
      resizeDnD = $('.el-resize'),
      range = $('input[type="range"]'),
      selectize = $('.rs-selectize'),
      sectionDnD = $('.section-dnd');

  // Section click
  $(document).on('click', function(e) {
    if(sectionDnD.is(e.target) && sectionDnD.has(e.target).length === 0) {
      var self = $(e.target);
      if(!elementDnD.is(e.target) && elementDnD.has(e.target).length === 0) {
        sectionDnD.removeClass('dnd-active');
        self.addClass('dnd-active');
      } else {
        sectionDnD.removeClass('dnd-active');
      }
    } else {
      sectionDnD.removeClass('dnd-active');
    }
  });

  // DELETE TOOLTIP
  deleteDnD.tooltip({
    animation: true,
    html: true,
    placement: 'top',
    trigger: 'manual',
    template: '<div class="tooltip dnd-tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    title: '<p>Are you sure?</p><span class="btn btn-danger btn-sm">delete</span>'
  });
  resizeDnD.tooltip({
    animation: true,
    html: true,
    placement: 'bottom',
    trigger: 'hover',
    template: '<div class="tooltip dnd-tooltip dnd-resize" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    title: function() {
      var resizeText = $(this).attr('data-resize');

      return '<p>Drag to resize '+ resizeText +'</p>'
    }
  });
  $('.el-resize').on('show.bs.tooltip', function (tl) {
    $(this).next().addClass('resize');
  });

  // DnD element focus/blur
  elementDnDInside.on('focus', function() {
    $('.el-delete').tooltip('hide');
    $(this).parents(elementClass).addClass('dnd-active').removeClass('dnd-delete-active');
  });
  elementDnDInside.on('blur', function() {
    $(this).parents(elementClass).removeClass('dnd-active');
  });

  // DnD element delete hover/click

  $(document).on('click', function(e) {
    var tooltipElements = $('.element-dnd .tooltip, .element-dnd .el-delete');
    if(!tooltipElements.is(e.target) && tooltipElements.has(e.target).length === 0) {
      $('.element-dnd.dnd-delete-active .el-delete').tooltip('hide');
      $('.element-dnd.dnd-delete-active').removeClass('dnd-delete-active');
    }
  });
  elementDnDDelete.hover(
    function() {
      $(this).parents(elementClass).addClass('dnd-delete-hover');
    },
    function() {
      $(this).parents(elementClass).removeClass('dnd-delete-hover');
    }
  );
  elementDnDDelete.on('click', function() {
    var self = $(this);
    self.tooltip('show');
    self.parents(elementClass).addClass('dnd-delete-active');
  });

  $('#settings-form-others .datepicker').datepicker({
    format: "dd/mm/yyyy"
  });

  $('#settings-form-others .datetimepicker').datetimepicker({
    format: "dd/mm/yyyy - HH.iip"
  });

  $('.message-editor').froalaEditor({
    height: 274,
    theme: 'dark',
    charCounterCount: false,
    placeholderText: 'Thank-you message',
    pluginsEnabled: ['align', 'fontSize', 'link', 'lists', 'inlineStyle'],
    toolbarButtons: ['bold', 'italic', 'underline', 'fontSize', 'align', 'insertLink', 'formatUL', 'formatOL',],
    toolbarButtonsMD: ['bold', 'italic', 'underline', 'fontSize', 'align', 'insertLink', 'formatUL', 'formatOL',],
    toolbarButtonsSM: ['bold', 'italic', 'underline', 'fontSize', 'align', 'insertLink', 'formatUL', 'formatOL',],
    toolbarButtonsXS: ['bold', 'italic', 'underline', 'fontSize', 'align', 'insertLink', 'formatUL', 'formatOL',]
  });

  $('.droppable-side .element-wrap').on('click', function(e) {
    var self = $(this),
        parent = self.parent(),
        modal = self.parents('.settings-modal'),
        settings = self.next(),
        modalBodyTop = self.parents('.modal-body').offset().top,
        modalBodyHeight = self.parents('.modal-body').height(),
        settingsTop = settings.offset().top,
        settingsHeight = settings.height();
    if(!modal.hasClass('settings-active')) {
      if(modalBodyTop > settingsTop) {
        margin = modalBodyTop - settingsTop + 15;
        settings.css({'margin-top': margin + 'px'});
        settings.children('.settings-arrow').css({'margin-top': '-' + margin + 'px'});
      }
      parent.addClass('active');
      modal.addClass('settings-active');
    } else {
      $('.form-element-dnd').removeClass('active');
      modal.removeClass('settings-active');
    }
  });

  $('.settings-dialog .color-picker input').spectrum({
    showInput: true,
    showAlpha: true,
    preferredFormat: "hex",
    appendTo: 'body'
  });

  $('.settings-dialog .color-picker .sp-replacer').on( 'click',  function() {
    var $this = $(this),
        container = $('.sp-container:not(.sp-hidden)'),
        replacerLeftPos = $this.offset().left + 10,
        replacerTopPos = $this.offset().top - $(window).scrollTop(),
        replacerHeight = $this.height(),
        replacerWidth = $this.width();

      if($this.hasClass('sp-active')) {
        // check window position
        var screenHeight = window.innerHeight - 10,
            containerTopPos = replacerTopPos - replacerHeight,
            containerLeftPos = replacerLeftPos + replacerWidth,
            containerHeight = container.height(),
            containerFull = containerTopPos + containerHeight,
            addTop = 0;

        if(screenHeight < containerFull) {
          addTop = containerFull - screenHeight;
        }
        // console.log(containerArrow);

        container.css({'position' : 'fixed', 'left' : containerLeftPos + 'px', 'top' : (containerTopPos - addTop) + 'px'});

        $('.sp-container').find('span.sp-arrow').remove();
        container.append('<span class="sp-arrow"><span/>');
        container.find('span.sp-arrow').css({'top' : (replacerHeight + addTop) + 'px'});// 5 - магическое число

        $(window).scroll(function() {
          replacerTopPos = $this.offset().top - $(window).scrollTop();
          containerTopPos = replacerTopPos - replacerHeight;

          container.css({"top" : (containerTopPos - addTop)});

        });
      } else {
        $('.sp-container').find('span.sp-arrow').remove();
      }
  });

  //FILE MANAGER (?)
  $('.modal-file-manager .file-manager-settings .file-view').click(function(e) {
    e.preventDefault();
    var fileList = $('.modal-file-manager .file-manager-list'),
        viewType = $(this).attr('data-viewtype'),
        viewField = fileList.attr('data-view');
    fileList.removeClass(viewField);
    $('.modal-file-manager .file-manager-settings .file-view').removeClass('active');
    $(this).addClass('active');
    fileList.attr('data-view', viewType);
    fileList.addClass(viewType);
  });
  $('.modal-file-manager .file-manager-list-wrap, .modal-file-manager .upload-files-wrap, .settings-dialog .internal-page-list').niceScroll({
    cursorwidth: "3px",
    cursorborderradius: "4px",
    cursorborder : false,
    cursorcolor:"#000000",
    cursoropacitymax: 0.20,
    horizrailenabled: false,
    smoothscroll: false,
    nativeparentscrolling: false
  }).resize();

  range.rangeslider({
    polyfill: false
  });

  // Plyr player
  plyr.setup();

  // Selectize
  selectize.selectize({
    onDropdownOpen: function($dropdown) {
      $dropdown.find('.selectize-dropdown-content').niceScroll({
        cursorborderradius: "0px",
        cursorborder : false,
        cursorcolor:"#000000",
        cursoropacitymax: 0.30,
        horizrailenabled: false,
      }).resize();
    }
  });

  // Custom number input
  $('.quantity-input').each(function() {
    var spinner = $(this),
      input = spinner.find('input[type="number"]'),
      btnUp = spinner.find('.quantity-up'),
      btnDown = spinner.find('.quantity-down'),
      min = input.attr('min'),
      max = input.attr('max');

    btnUp.click(function() {
      var oldValue = parseFloat(input.val());
      if (oldValue >= max) {
        var newVal = oldValue;
      } else {
        var newVal = oldValue + 1;
      }
      spinner.find("input").val(newVal);
      spinner.find("input").trigger("change");
    });

    btnDown.click(function() {
      var oldValue = parseFloat(input.val());
      if (oldValue <= min) {
        var newVal = oldValue;
      } else {
        var newVal = oldValue - 1;
      }
      spinner.find("input").val(newVal);
      spinner.find("input").trigger("change");
    });

  });

  // $('.element-wrap').froalaEditor({
  //   charCounterCount: false,
  //             htmlUntouched: true,
  //             keepFormatOnDelete: true,
  //             theme: 'dark',
  //             enter: $.FroalaEditor.ENTER_BR,
  //
  //             toolbarButtons: ['bold', 'italic', 'underline', 'fontFamily', 'fontSize', 'align', 'color', 'insertLink', 'formatOL', 'formatUL', 'insertTable', 'undo', 'redo'],
  //             toolbarButtonsMD: ['bold', 'italic', 'underline', 'fontFamily', 'fontSize', 'align', 'color', 'insertLink', 'formatOL', 'formatUL', 'insertTable', 'undo', 'redo'],
  //             toolbarButtonsSM: ['bold', 'italic', 'underline', 'fontFamily', 'fontSize', 'align', 'color', 'insertLink', 'formatOL', 'formatUL', 'insertTable', 'undo', 'redo'],
  //             toolbarButtonsXS: ['bold', 'italic', 'underline', 'fontFamily', 'fontSize', 'align', 'color', 'insertLink', 'formatOL', 'formatUL', 'insertTable', 'undo', 'redo'],
  //             toolbarVisibleWithoutSelection: true,
  //             toolbarInline: true,
  //             // toolbarBottom: true,
  //
  //             pastePlain: true,
  //             imageMove: false
  // });

  $('.element-wrap').on('froalaEditor.focus', function (e, editor) {
    $(e.target).parents('.element-dnd').addClass('dnd-active').removeClass('dnd-delete-active');
  });
  $('.element-wrap').on('froalaEditor.blur', function (e, editor) {
    $(e.target).parents('.element-dnd').removeClass('dnd-active');
  });

  function getCoords(elem) { // кроме IE8-
    var box = elem.getBoundingClientRect();

    return {
      top: box.top + pageYOffset,
      left: box.left + pageXOffset
    };

  }
  // document.getElementById("draggable").addEventListener("dragstart", function(e) {
  //     var crt = $(this).clone().wrap('<div></div>').parent().html();
  //     var drag = document.getElementById("draggable");
  //     var coords = getCoords(drag);
  //     var shiftX = e.pageX - coords.left;
  //     var shiftY = e.pageY - coords.top;
  //     crt.style.background = "red";
  //     crt.style.position = "absolute"; crt.style.top = "0px"; crt.style.left = "-100px";
  //     document.body.appendChild(crt);
  //     e.dataTransfer.setDragImage(crt, shiftX, shiftY);
  // }, false);
  $('.sidebar-dragdrop .draggable-group li[draggable="true"]').on('dragstart', function(e) {
    var self = $(this),
        clone = self.clone().addClass('drag-clone'),
        coords = getCoords(self[0]);
        shiftX = e.pageX - coords.left;
        shiftY = e.pageY - coords.top;
    $(this).after(clone);

    e.originalEvent.dataTransfer.setDragImage(clone[0], shiftX, shiftY);
    self.addClass('draggable');
    console.log(this,clone[0]);

  });

  $('.sidebar-dragdrop .draggable-group li[draggable="true"]').on('dragend', function() {
    $(this).removeClass('draggable');
    $('.sidebar-dragdrop .draggable-group li.drag-clone').remove();
    console.log("Drag End");
  });
  // $('#draggable').bind('dragstart', function (e){
  // var background = document.getElementById('draggable').style.background;
  // document.getElementById('draggable').style.background = 'red';
  // document.getElementById('draggable').classList.add("otherclass");
  // setTimeout((function(background){
  //     return function(){
  //         //Set style here
  //         document.getElementById('draggable').classList.remove("otherclass");
  //         document.getElementById('draggable').style.background = background;
  //     }
  // })(background), 1);

  // http://stackoverflow.com/questions/2419749/get-selected-elements-outer-html
  // $(this).clone().wrap('<div></div>').parent().html();
  // e.originalEvent.dataTransfer.effectAllowed = 'copy';
  // e.originalEvent.dataTransfer.setData('stuff', stuff);
// });

});
