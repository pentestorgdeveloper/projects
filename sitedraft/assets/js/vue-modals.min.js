Vue.component('step-navigation-step', {
    template: '#step-navigation-step-template',

    props: ['step', 'currentstep'],

    computed: {
        indicatorclass: function() {
            return {
                'active': (this.step.id == this.currentstep),
                'complete': (this.currentstep > this.step.id)
            }
        }
    }
});

Vue.component('step-navigation', {
    template: '#step-navigation-template',

    props: ['steps', 'currentstep']
});

Vue.component('step', {
    template: '#step-template',

    props: ['step', 'stepcount', 'currentstep'],

    data: function(){
      return {
        currentstepLocal:this.currentstep
      }
    },

    watch: {
      currentstep: function(value){
        this.currentstepLocal = this.currentstep
      }
    },

    computed: {
        active: function() {
            return (this.step.id == this.currentstepLocal)
        },

        firststep: function() {
            return (this.currentstepLocal == 1)
        },

        laststep: function() {
            return (this.currentstepLocal == this.stepcount)
        }
    },

    methods: {
        nextStep: function() {
            this.$emit('step-change', ++this.currentstepLocal)
        },

        lastStep: function() {
            this.$emit('step-change', --this.currentstepLocal)
        },

        closeModal: function() {
            $(event.currentTarget).parents('.modal').modal('hide');
            check();
        }
    }
});

Vue.component('selectize-country', {
  template: '#selectize-country',
  props: ['value'],
  data: function() {
    return {
      internalValue: '',
      countries: []
    }
  },
  created: function() {
    this.internalValue = this.value;

    var vm = this;

    $.getJSON('assets/vendor/countries.json').done(function(json) {

      vm.countries = json.map(function(item){
        item.text = item.name;
        item.value = item.code;
        return item;
      });

      vm.initPlugin()

    });

  },
  watch: {
    internalValue: function() {
      this.$emit('input', this.value);
    }
  },
  methods: {
    initPlugin: function(){
      var vm = this;

      $(vm.$el).selectize({
        labelField: 'text',
        valueField: 'value',
        searchField: 'text',
        options: vm.countries,
        onInitialize: function() {
          this.setValue(vm.internalValue);
        },
        onDropdownOpen: function($dropdown) {
          $dropdown.find('.selectize-dropdown-content').niceScroll({
            cursorborderradius: "0px",
            cursorborder : false,
            cursorcolor:"#000000",
            cursoropacitymax: 0.30,
            horizrailenabled: false,
          }).resize();
        },
        onChange: function(value) {
          vm.internalValue = value;
          vm.$emit('input', vm.internalValue);
          vm.$emit('update', vm.internalValue)
        }
      });
    }
  }
})

var modals = new Vue({
  el: "#modals",
  data: {
    modals: {
      newDomain: {
        currentstep: 0,
        steps: [
          {
            id: 1,
            title: 'Domain Owner',
            icon_class: "fa fa-id-card-o",
            backButton: true,
            floatButtons: true,
            submitText: 'Create a website on your domain now!'
          },
          {
            id: 2,
            title: 'Invoice Details',
            icon_class: "fa fa-file-text-o",
            backButton: true,
            floatButtons: true,
            submitText: 'Create a website on your domain now!'
          },
          {
            id: 3,
            title: 'Checkout',
            icon_class: "fa fa-shopping-basket",
            backButton: false,
            floatButtons: false,
            submitText: 'Create a website on your domain now!'
          },
          {
            id: 4,
            title: 'Finished',
            icon_class: "fa fa-check",
            backButton: false,
            floatButtons: false,
            submitText: 'Create a website on your domain now!'
          }
        ],
        domainOwner: {
          domainItems: [
            {
              id: 1,
              name: 'janjanssen.nl',
              validate: false,
              valid: false,
              expanded: false,
              fields: {
                type: 'individual',
                businessName: '',
                firstName: '',
                lastName: '',
                street: '',
                number: '',
                extension: '',
                postalCode: '',
                city: '',
                country: '',
                email: '',
                phone: ''
              }
            },
            {
              id: 2,
              name: 'anotherdomain.com',
              validate: false,
              valid: false,
              expanded: false,
              fields: {
                type: 'individual',
                businessName: '',
                firstName: '',
                lastName: '',
                street: '',
                number: '',
                extension: '',
                postalCode: '',
                city: '',
                country: '',
                email: '',
                phone: ''
              }
            },
            {
              id: 3,
              name: 'thirddomain.ext',
              validate: false,
              valid: false,
              expanded: false,
              fields: {
                type: 'individual',
                businessName: '',
                firstName: '',
                lastName: '',
                street: '',
                number: '',
                extension: '',
                postalCode: '',
                city: '',
                country: '',
                email: '',
                phone: ''
              }
            }
          ]
        },
        billingDetails: {
          type: 'individual',
          businessName: '',
          firstName: '',
          lastName: '',
          street: '',
          number: '',
          extension: '',
          postalCode: '',
          city: '',
          country: '',
          email: '',
          phone: '',
          vatNumber: ''
        },
        checkout: [
          {
            name: 'janjanssen.nl',
            price: 10
          },
          {
            name: 'schildersbedrijfandrii.com',
            price: 20
          },
          {
            name: 'myowndomain.com',
            price: 15
          }
        ]
      },
      newWebsite: {
        currentstep: 0,
        steps: [
            {
              id: 1,
              title: 'About Your Site',
              icon_class: "fa fa-file-text-o",
              backButton: true,
              floatButtons: true,
              submitText: 'Finish and create site'
            },
            {
              id: 2,
              title: 'Primary Goal',
              icon_class: "fa fa-bullseye",
              backButton: true,
              floatButtons: true,
              submitText: 'Finish and create site'
            },
            {
              id: 3,
              title: 'Sitedraft Marketing',
              icon_class: "fa fa-rocket",
              backButton: true,
              floatButtons: true,
              submitText: 'Finish and create site'
            },
            {
              id: 4,
              title: 'Site Title',
              icon_class: "fa fa-television",
              backButton: true,
              floatButtons: true,
              submitText: 'Finish and create site'
            }
        ],
        aboutSite: [
          {
            question: 'Community / Non-Profit',
            checkbox: false
          },
          {
            question: 'Wedding',
            checkbox: false
          },
          {
            question: 'Music',
            checkbox: false
          },
          {
            question: 'Health / Fitness',
            checkbox: false
          },
          {
            question: 'Food & Drink (Bar, Restaurant, Food Blog, etc.)',
            checkbox: false
          },
          {
            question: 'Home & Living (Real Estate, Interiors, Home Goods, etc.)',
            checkbox: false
          },
          {
            question: 'Travel / Lifestyle',
            checkbox: false
          },
          {
            question: 'Professional Services (Legal, Consulting, Healthcare, etc.)',
            checkbox: false
          },
          {
            question: 'Art & Design',
            checkbox: false
          },
          {
            question: 'Fashion',
            checkbox: false
          },
          {
            question: 'Personal / Bio (CV, Actor/Personality, etc.)',
            checkbox: false
          },
          {
            question: 'Media / Entertainment (Film, TV, Sport, Podcast, etc.)',
            checkbox: false
          },
          {
            question: 'Personal / Bio (CV, Actor/Personality, etc.)',
            checkbox: false
          },
          {
            question: 'Media / Entertainment (Film, TV, Sport, Podcast, etc.)',
            checkbox: false
          },
          {
            question: 'Other',
            checkbox: false
          }
        ],
        goal: [
          {
            question: 'Sell products or services online',
            checkbox: false
          },
          {
            question: 'Get hired',
            checkbox: false
          },
          {
            question: 'Showcase or create a portfolio of my work',
            checkbox: false
          },
          {
            question: 'Raise funds or solicit donations',
            checkbox: false
          },
          {
            question: 'Promote a physical business',
            checkbox: false
          },
          {
            question: 'Announce an event or project',
            checkbox: false
          },
          {
            question: 'Collect contact info or RSVPs',
            checkbox: false
          },
          {
            question: 'Capture memories or ideas',
            checkbox: false
          },
          {
            question: 'Blog or publish content',
            checkbox: false
          },
          {
            question: 'Other',
            checkbox: false
          }
        ],
        sitedraftMarketing: true
      },
      account: {
        websites: [
          {
            name: 'First test website',
            address: 'https://firsttestwebsite-86545.sitedraft.com',
            role: 'owner',
            trial: true,
            preview: 'assets/img/account/website-preview.jpg'
          },
          {
            name: 'Super Magic Show',
            address: 'www.supermagicshow.com',
            role: 'administrator',
            trial: false,
            preview: ''
          },
          {
            name: 'I dont like Walking Dead Fansite',
            address: 'idontlikewalkingdeadfansite.ua',
            role: 'editor',
            trial: false,
            preview: ''
          },
          {
            name: 'Sitedraft Playing Field',
            address: 'comeplaywith.me',
            role: 'owner',
            trial: false,
            preview: 'assets/img/account/website-preview.jpg'
          },
          {
            name: 'Andrii\'s jQuery Place',
            address: 'jqueryrox.yes',
            role: 'administrator',
            trial: true,
            preview: ''
          }
        ],
        settings: {
          firstName: '',
          lastName: '',
          birthday: '',
          gender: 'male',
          email: '',
          password: ''
        },
        billing: {
          list: [
            {
              created: '31-01-2016',
              type: 'Website - small',
              domain: 'www.andriithebomb.ext',
              price: '14,00',
              reccuring: 'Monthly',
              invoice: '01-02-2017',
              invoiceNote: false,
              name: 'Abdrii Dubovitskyi',
              cardType: 'mastercard',
              cardNum: '4602'
            },
            {
              created: '31-01-2016',
              type: 'Domain',
              domain: 'www.andriiseconddomain.com',
              price: '20,00',
              reccuring: 'Annually',
              invoice: '01-01-2017',
              invoiceNote: true,
              name: 'Abdrii Dubovitskyi',
              cardType: 'mastercard',
              cardNum: '4602'
            },
            {
              created: '31-01-2016',
              type: 'Website - large',
              domain: 'www.andriiworksite.com',
              price: '120,00',
              reccuring: 'Annually',
              invoice: '01-02-2017',
              invoiceNote: false,
              name: 'Abdrii Dubovitskyi',
              cardType: 'mastercard',
              cardNum: '4602'
            }
          ]
        }
      },
      domainSettings: {
        addEmail: {
          currentstep: 1,
          steps: [
            {
              id: 1,
              title: 'Choose package',
              icon_class: 'fa fa-envelope-open-o',
              backButton: true,
              floatButtons: true,
              submitText: 'Add email functionality!'
            },
            {
              id: 2,
              title: 'Invoice details',
              icon_class: 'fa fa-file-text-o',
              backButton: true,
              floatButtons: true,
              submitText: 'Add email functionality!'
            },
            {
              id: 3,
              title: 'Checkout',
              icon_class: 'fa fa-shopping-basket',
              backButton: false,
              floatButtons: false,
              submitText: 'Add email functionality!'
            },
            {
              id: 4,
              title: 'Choose package',
              icon_class: 'fa fa-check',
              backButton: false,
              floatButtons: false,
              submitText: 'Add email functionality!'
            }
          ],
          package: {
            checkbox: true,
            items: [
              {
                size: '5 GB',
                price: {
                  monthly: '5',
                  annual: {
                    full: '60',
                    discount: '50'
                  }
                }
              },
              {
                size: '15 GB',
                price: {
                  monthly: '15',
                  annual: {
                    full: '180',
                    discount: '150'
                  }
                }
              },
              {
                size: '50 GB',
                price: {
                  monthly: '25',
                  annual: {
                    full: '300',
                    discount: '250'
                  }
                }
              }
            ]
          },
          details: {
            type: 'individual',
            businessName: '',
            firstName: '',
            lastName: '',
            street: '',
            number: '',
            extension: '',
            postalCode: '',
            city: '',
            country: '',
            email: '',
            phone: ''
          },
          checkout: {
            name: 'some@mail.com',
            price: '15',
            yearPrice: '180'
          }
        },
        editDNS: {
          dns: {
            select: {
              selected: '',
              options: []
            },
            recordList: [
              {
                checkbox: false,
                type: 'A record',
                host: '@',
                value: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'A record',
                host: 'www',
                value: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'A record',
                host: '*',
                value: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'A record',
                host: 'www',
                value: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'A record',
                host: '*',
                value: '192.168.0.1'
              }
            ],
            newRecord: {
              create: false,
              typeOptions: [
                {
                  text: 'A record',
                  value: 'A record'
                }
              ],
              template: {
                checkbox: false,
                type: '',
                host: '',
                value: ''
              }
            }
          },
          mx: {
            preset: {
              selected: '',
              options: []
            },
            select: {
              selected: '',
              options: []
            },
            recordList: [
              {
                checkbox: false,
                type: 'MX record',
                priority: '10',
                destination: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'MX record',
                priority: '20',
                destination: '192.168.0.1'
              },
              {
                checkbox: false,
                type: 'MX record',
                priority: '30',
                destination: '192.168.0.1'
              }
            ],
            newRecord: {
              create: false,
              priorityOptions: [
                {
                  text: '10',
                  value: '10'
                },
                {
                  text: '20',
                  value: '20'
                },
                {
                  text: '30',
                  value: '30'
                }
              ],
              template: {
                checkbox: false,
                type: 'MX record',
                priority: '',
                destination: ''
              }
            }
          },
          ttl: {
            select: {
              selected: '',
              options: []
            }
          }
        },
        whois: {
          type: 'Business',
          businessName: 'Sitecentrale',
          firstName: 'Hakan',
          lastName: 'Tabor',
          street: 'Mechelaarstraat',
          number: '17',
          extension: 'RE',
          postalCode: '4903',
          city: 'Oosterhout',
          country: 'NL',
          email: 'info@sitecentrale.nl',
          phone: '+31162241007',
          edit: false
        }
      },
      pageSettings: {
        pageSettings: {
          basic: {
            menuTitle: 'Meet the team',
            pageTitle: 'Meet the team',
            autoSlugsCheckbox: true,
            slugsAuto: '',
            slugsCustom: '',
            pageDescr: '',
            publishedCheckbox: true
          },
          advanced: {
            menu: {
              showCheckbox: true,
              color: '#A4C0FF',
              hoverColor: '#A4C0FF',
              backgroundColor: '#A4C0FF'
            },
            passwordRequired: {
              checkbox: true,
              input: ''
            },
            publish: {
              from: '',
              until: ''
            }
          },
          code: {
            head: '.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}\n.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}\n.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}',
            body: '.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}\n.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}\n.class {\n font-family: arial;\n color: #FF0000;\n border: 1px;\n}'
          }
        },
        restoreBackup: {
          status: false,
          restore: '',
          list: [
            {
              date: '30-05-2017',
              restore: [
                {
                  type: 'saved',
                  time: '10.42 am'
                }
              ]
            },
            {
              date: '24-04-2017',
              restore: [
                {
                  type: 'saved',
                  time: '11.03 pm'
                },
                {
                  type: 'unpublished',
                  time: '8.36 pm'
                },
                {
                  type: 'saved',
                  time: '1.52 am'
                }
              ]
            },
            {
              date: '11-03-2017',
              restore: [
                {
                  type: 'published',
                  time: '12.53 pm'
                },
                {
                  type: 'saved',
                  time: '11.33 pm'
                },
                {
                  type: 'saved',
                  time: '11.03 am'
                }
              ]
            }
          ]
        }
      }
    },
    countries: []
  },
  watch: {
    'modals.newDomain.currentstep': function() {
      var self = this;
      setTimeout(function() {
        self.initTel();

      },0);
      if(self.modals.newDomain.currentstep == 1) {
        setTimeout(function() {
          $('#collapse-1').collapse("show");
        }, 1000);
      }
    },
    'modals.domainSettings.addEmail.currentstep': function() {
      var self = this;
      setTimeout(function() {
        self.initTel();

      },0);
    },
    'modals.pageSettings.pageSettings.basic.menuTitle': function() {
      this.pageSettingsSlugs();
    },
    'modals.pageSettings.pageSettings.basic.slugsCustom': function() {
      this.modals.pageSettings.pageSettings.slugsCustom = this.modals.pageSettings.pageSettings.slugsCustom.toLowerCase().replace(/\s/ig, '-');
    }
  },
  mounted: function() {
    // modals
    var stepsDomainModal = $(this.$el).find('#modal-domain-steps'),
        stepsWebsiteModal = $(this.$el).find('#modal-website-steps'),
        confirmEmail = $(this.$el).find('#modal-confirm-email'),
        vm = this;

    $('.preloader').removeClass('active');

    confirmEmail.modal({
      show: true
    })
    stepsDomainModal.modal({
      // backdrop: 'static',
      show: false
    });
    stepsWebsiteModal.modal({
      // backdrop: 'static',
      show: false
    });
    confirmEmail.on('hidden.bs.modal', function (e) {
      stepsDomainModal.modal('show');
    });
    stepsDomainModal.on('hidden.bs.modal', function (e) {
      stepsWebsiteModal.modal('show');
    });

    this.initPlugins();

    $.getJSON('assets/vendor/countries.json').done(function(json) {

      vm.countries = json.map(function(item){
        item.name = item.name;
        item.code = item.code;
        return item;
      });

    });

    // for dev (example):
    this.pageSettingsSlugs();

  },
  computed: {
    domainFullPrice: function() {
      var price = 0;
      this.modals.newDomain.checkout.forEach(function(item, value) {
        price += item.price;
      });
      $(this.$el).find('.modal-domain .step-wrapper.active').next().children('button').html('Click here to make payment of &euro; '+price+',00 <span class="f-s-small f-w-400">(annual recurring)</span><i class="fa fa-angle-double-right icon-btn m-l"></i>').addClass('f-w-500');
      return price;
    },
    domainsEmailPrice: function() {
      var price = this.modals.domainSettings.addEmail.checkout.price;

      $(this.$el).find('.modal-email-functionality .step-wrapper.active').next().children('button').html('Click here to make payment of &euro; '+price+',00 <span class="f-s-small f-w-400">(annual recurring)</span><i class="fa fa-angle-double-right icon-btn m-l"></i>').addClass('f-w-500');
      // retur  n price;
    },
    changeButton: function() {
      $(this.$el).find('.modal-website .step-wrapper.active').next().children('.btn-success').html('<i class="fa fa-check icon-btn m-r"></i>Finish and create site').addClass('btn-wide button-right');
    }
  },
  components: {
    'domain-modal': {
      template: '#domain-modal',
      props: ['domain'],
      watch: {
        'domain.fields': {
          handler: function(val) {
            var vm = this
            var count = 0;
            if(vm.domain.fields.type == 'business') {
              Object.keys(val).forEach(function(key,index) {
                if(val[key].length){
                  count++
                }
              });
              if(count == Object.keys(val).length){
                vm.domain.validate = true;
                vm.domain.valid = true;
              } else {
                vm.domain.validate = false;
                vm.domain.valid = false;
              }
            } else {
              Object.keys(val).forEach(function(key,index) {
                if(!(key == 'businessName')) {
                  if(val[key].length){
                    count++
                  }
                } else {
                  return true;
                }
              });
              if(count == Object.keys(val).length - 1){
                vm.domain.validate = true;
                vm.domain.valid = true;
              } else {
                vm.domain.validate = false;
                vm.domain.valid = false;
              }
            }
          },
          deep: true
        }
      },
      mounted: function() {
        $('.hover-tooltip').tooltip({
          container: '#modals',
          template: '<div class="tooltip danger-tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
        });
      },
      methods: {
        updateDomainTel: function(code) {
          var inputTel = $(event.currentTarget).parents('.panel-body').find('input[type="tel"]');
          if(!inputTel.val() && code) {
            inputTel.intlTelInput("setCountry", code);
          }
        },
      }
    },
    datepicker: {
      template: '#datepicker',
      props: ['value'],
      data: function() {
        return {
          internalValue: ''
        }
      },
      watch: {
        internalValue: function() {
          this.$emit('input', this.internalValue);
        }
      },
      created: function() {
        this.internalValue = this.value
      },
      mounted: function() {
        var vm = this,
            input = $(this.$el);
        input.datepicker({
        }).on('changeDate', function(value) {
          vm.internalValue = input.val();
          vm.$emit('input', vm.internalValue);
        });
      }
    },
    datetimepicker: {
      template: '#datetimepicker',
      props: ['value', 'placeholder'],
      data: function() {
        return {
          internalValue: ''
        }
      },
      watch: {
        internalValue: function() {
          this.$emit('input', this.internalValue);
        }
      },
      created: function() {
        this.internalValue = this.value
      },
      mounted: function() {
        var vm = this,
            input = $(this.$el);
        input.datetimepicker({
          format: 'yyyy-mm-dd hh:ii',
          pickerPosition: 'top-right'
        }).on('changeDate', function(value) {
          vm.internalValue = input.val();
          vm.$emit('input', vm.internalValue);
        });
      }
    }
  },
  methods: {
   copyDown: function(obj) {
      this.$data.modals.newDomain.domainOwner.domainItems.fields = this.$data.modals.newDomain.domainOwner.domainItems.fields.map(function(item){

        obj.name = item.name
        obj.expanded = item.expanded
        obj.copyButton = item.copyButton
        obj.id = item.id
        return Vue.util.extend({}, obj);
      });
    },
    initTel: function() {
      var phoneIputs = $(this.$el).find('input[type="tel"]');
      phoneIputs.intlTelInput();
    },
    updateDomainTel: function(code) {
      var inputTel = $(event.currentTarget).parents('.panel-body').find('input[type="tel"]');
      if(!inputTel.val() && code) {
        inputTel.intlTelInput("setCountry", code);
      }
    },
    updateDomainDetailsTel: function(code) {
      var inputTel = $(event.currentTarget).parents('.modal-body').find('input[type="tel"]');
      if(!inputTel.val()) {
        inputTel.intlTelInput("setCountry", code);
      }
    },
    initPlugins: function() {
      var vm = this,
          inputPass = $(vm.$el).find('input.pass-strength'),
          accountTable = $(vm.$el).find('.subscriptions-table'),
          phoneIputs = $(this.$el).find('input[type="tel"]');
      inputPass.strengthMeter('text', {
        container: $('.help-block'),
        hierarchy: {
          '0': ['text-danger help-block text-right pass-strength-text', ''],
          '1': ['text-danger help-block text-right pass-strength-text', 'Think about a stronger password!'],
          '5': ['text-warning help-block text-right pass-strength-text', 'Well, you are doing better ...'],
          '10': ['text-warning help-block text-right pass-strength-text', 'Keep going ...'],
          '15': ['text-success help-block text-right pass-strength-text', 'Ok, this will do!']
        }
      });

      accountTable.DataTable({
        paging: false,
        info: false,
        filter: false,
        order: [[ 5, "asc" ]]
      });

      phoneIputs.intlTelInput();
    },
    newRecord: function(type) {
      if(type == 'dns') {
        this.modals.domainSettings.editDNS.dns.recordList.push(Vue.util.extend({}, this.modals.domainSettings.editDNS.dns.newRecord.template));
        this.closeRecord(type);
      } else if(type == 'mx') {
        this.modals.domainSettings.editDNS.mx.recordList.push(Vue.util.extend({}, this.modals.domainSettings.editDNS.mx.newRecord.template));
        this.closeRecord(type);
      } else {
        return false;
      }
    },
    closeRecord: function(type) {
      var vm = this;
      if(type == 'dns') {
        var template = vm.modals.domainSettings.editDNS.dns.newRecord.template;
        vm.modals.domainSettings.editDNS.dns.newRecord.create = false;
        reset(template);
      } else if(type == 'mx') {
        var template = vm.modals.domainSettings.editDNS.mx.newRecord.template;
        vm.modals.domainSettings.editDNS.mx.newRecord.create = false;
        reset(template);
      } else {
        return false;
      }

      function reset(template) {
        for(var key in template) {
          if(!(template[key] == 'checkbox')) {
            template[key] = '';
          } else {
            return true;
          }
        }
      }
    },
    parseCountry: function(country) {
      var vm = this,
      countryItem = vm.countries.find(function(item){
        return item.code == country;
      });
      return countryItem ? countryItem.name : false;
    },
    pageSettingsSlugs: function() {
      var value = this.modals.pageSettings.pageSettings.basic.menuTitle,
          urlValue = value.toLowerCase().replace(/\s/ig, '-');
      this.modals.pageSettings.pageSettings.basic.slugsAuto = urlValue;
    },
    pageHeadStyle: function(val) {
      this.modals.pageSettings.pageSettings.code.head = val;
    },
    pageBodyStyle: function(val) {
      this.modals.pageSettings.pageSettings.code.body = val;
    },
    pageRestoreBackup: function(date, time) {
      this.modals.pageSettings.restoreBackup.status = true;
      return this.modals.pageSettings.restoreBackup.restore = date + ' at ' + time;
    }
  }
});


$('.modal').niceScroll({
  cursorborderradius: "0px",
  cursorborder : false,
  cursorcolor:"#000000",
  cursoropacitymax: 0.30,
  horizrailenabled: false,
}).resize();

$('.hover-tooltip').tooltip({
  container: '#modals'
});
$('.hover-danger-tooltip').tooltip({
  container: '#modals',
  template: '<div class="tooltip danger-tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>'
});

function pageCodeEditor() {
  var codeBody = ace.edit("editor-body"),
      codeHead = ace.edit("editor-head");

  var CSSMode = ace.require("ace/mode/css").Mode;

  codeHead.session.setMode(new CSSMode());
  codeBody.session.setMode(new CSSMode());

  codeHead.getSession().setTabSize(2);
  codeBody.getSession().setTabSize(2);

  codeHead.setShowFoldWidgets(false);
  codeBody.setShowFoldWidgets(false);

  codeHead.getSession().on('change', function(e) {
    var val = codeHead.getValue();
    modals.pageHeadStyle(val);
  });
  codeBody.getSession().on('change', function(e) {
    var val = codeBody.getValue();
    modals.pageBodyStyle(val);
  });

};
pageCodeEditor();
